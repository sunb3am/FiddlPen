{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","codeMirrorOptions","theme","viewportMargin","Infinity","lineNumbers","lineWrapping","PasteClient","useState","html","sethtml","css","setcss","js","setjs","file","setfile","htmleditor","className","value","options","mode","onBeforeChange","editor","data","csseditor","jseditor","onClick","src","alt","title","srcDoc","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAoKeA,MAvJf,WACE,IAAMC,EAAoB,CACxBC,MAAO,WACPC,eAAgBC,IAChBC,aAAa,EAGbC,cAAc,GAMhB,GAJe,IAAIC,IAAY,oCAIRC,mBAAS,4BAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAqBF,mBAAS,uBAA9B,mBAAOG,EAAP,KAAWC,EAAX,KACA,EAAmBJ,mBAAS,oIAA5B,mBAAOK,EAAP,KAAUC,EAAV,KACA,EAAuBN,mBAAS,GAAhC,mBAAOO,EAAP,KAAYC,EAAZ,KAIMC,EAAa,qBAAKC,UAAY,cAAjB,SACjB,cAAC,aAAD,CACEA,UAAU,cACVC,MAAOV,EAEPW,QAAO,aACLC,KAAM,aACHpB,GAELqB,eAAgB,SAACC,EAAQC,EAAMf,GAC7BC,EAASD,QAITgB,EAAa,qBAAKP,UAAY,aAAjB,SACjB,cAAC,aAAD,CAEEC,MAAOR,EACPO,UAAU,cACVE,QAAO,aACLC,KAAM,OACHpB,GAELqB,eAAgB,SAACC,EAAQC,EAAMb,GAC7BC,EAAOD,QAIPe,EAAS,qBAAKR,UAAY,YAAjB,SACf,cAAC,aAAD,CACEA,UAAU,cACVC,MAAON,EAEPO,QAAO,aACLC,KAAM,cACHpB,GAELqB,eAAgB,SAACC,EAAQC,EAAMX,GAC7BC,EAAMD,QA8CV,OAEE,sBAAKK,UAAU,QAAf,UACE,qBAAKA,UAAY,QAAjB,sBAIA,sBAAKA,UAAU,WAAf,UACE,qDADF,IACmC,uBACjC,+BACE,sBAAKA,UAAU,OAAOS,QAjGX,kBAAMX,EAAQ,IAiGzB,cAA8C,qBAAKY,IAAM,gDAAgDC,IAAI,KAA7G,wBADF,IACiJ,uBAC/I,sBAAKX,UAAU,OAAOS,QAjGZ,kBAAMX,EAAQ,IAiGxB,cAA8C,qBAAKY,IAAM,sDAAsDC,IAAI,KAAnH,gBAFF,IAE+I,uBAC7I,sBAAKX,UAAU,OAAOS,QAjGb,kBAAMX,EAAQ,IAiGvB,cAA4C,qBAAKY,IAAM,oDAAoDC,IAAI,KAA/G,mBAHF,IAG8I,6BAGhJ,gCACU,IAATd,GAAYE,EACH,IAATF,GAAYU,EACH,IAATV,GAAYW,KAEb,qBAAKR,UAAU,SAAf,SACE,wBAAQY,MAAM,SAASC,OAAM,4UASrBpB,EATqB,oFAavBF,EAbuB,8EAgBrBI,EAhBqB,0EC9HtBmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4d929a8f.chunk.js","sourcesContent":["//import logo from './logo.svg';\r\nimport './App.css';\r\nimport React,{useState} from 'react';\r\nimport { Controlled as CodeMirror } from 'react-codemirror2';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/monokai.css';\r\nimport 'codemirror/theme/ayu-dark.css';\r\nimport 'codemirror/mode/htmlmixed/htmlmixed';\r\nimport 'codemirror/mode/css/css';\r\nimport 'codemirror/mode/javascript/javascript';\r\nimport PasteClient from \"pastebin-api\";\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const codeMirrorOptions = {\r\n    theme: 'ayu-dark',\r\n    viewportMargin: Infinity,\r\n    lineNumbers: true,\r\n    \r\n//    scrollbarStyle:'simple',\r\n    lineWrapping: true,\r\n  };\r\n  const client = new PasteClient(\"fiCunTslLXdOkuJwT4B3DgdSrt5fO4IT\");\r\n  let url = null;\r\n\r\n\r\n  const [html,sethtml] = useState('<h1> Hello there! </h1>');\r\n  const [css,setcss] = useState('h1 { color: navy };');\r\n  const [js,setjs] = useState('var today = new Date(); var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds(); document.write(time);');\r\n  const [file,setfile] = useState(1);\r\n  const togglehtml = () => setfile(1);\r\n  const togglecss = () => setfile(2);\r\n  const togglejs = () => setfile(3);\r\n  const htmleditor = <div className = \"html-editor\">\r\n    <CodeMirror\r\n      className=\"code-editor\"\r\n      value={html}\r\n      \r\n      options={{\r\n        mode: 'htmlmixed',\r\n        ...codeMirrorOptions,\r\n      }}\r\n      onBeforeChange={(editor, data, html) => {\r\n        sethtml( html );\r\n      }}\r\n    />\r\n  </div>;\r\n  const csseditor =  <div className = \"css-editor\">\r\n    <CodeMirror\r\n\r\n      value={css}\r\n      className=\"code-editor\"\r\n      options={{\r\n        mode: 'css',\r\n        ...codeMirrorOptions,\r\n      }}\r\n      onBeforeChange={(editor, data, css) => {\r\n        setcss(css);\r\n      }}\r\n    />\r\n  </div>;\r\n  const jseditor=<div className = \"js-editor\">\r\n  <CodeMirror\r\n    className=\"code-editor\"\r\n    value={js}\r\n    \r\n    options={{\r\n      mode: 'javascript',\r\n      ...codeMirrorOptions,\r\n    }}\r\n    onBeforeChange={(editor, data, js) => {\r\n      setjs(js);\r\n    }}\r\n  />\r\n  </div>;\r\n  \r\n\r\n  const pasteBinproc = async ()=> {\r\n    const paste = {api_dev_key: 'dJzBvFUS7oAOqO1-CCT3vZOqqhX6h1Nt',\r\n             api_option: \"paste\",        \r\n             api_paste_name: \"yourcode.html\",\r\n             api_paste_code: \r\n             `<!DOCTYPE html>\r\n             <html lang=\"en\">\r\n             <head>\r\n               <meta charset=\"UTF-8\">\r\n               <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n               <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n               <title>Document</title>\r\n               <style>\r\n                 ${css}\r\n               </style>\r\n             </head>\r\n             <body>\r\n               ${html}\r\n       \r\n               <script type=\"text/javascript\">\r\n                 ${js}\r\n               </script>\r\n             </body>\r\n             </html>`,\r\n             api_paste_format: 'html', \r\n             api_paste_private: 1,         \r\n             api_paste_expire_date: \"1D\",         \r\n             api_user_key: \"\",         \r\n             api_folder_key: \"\",  \r\n            }\r\n    \r\n  }\r\n//     axios.post('https://pastebin.com/api/api_post.php', user, {headers})\r\n//   .then(response => {\r\n//       console.log(response);\r\n//       console.log(response.data);\r\n//   }).catch(error => {\r\n//       console.log(\"AXIOS ERROR!! \" + error);\r\n// });\r\n  \r\n  return (\r\n    \r\n    <div className=\"wsite\">\r\n      <div className = \"title\">\r\n        FiddlPen\r\n        {/* <div className=\"pb\" onClick = {pasteBinproc}> PasteBin </div> */}\r\n      </div>\r\n      <div className=\"explorer\">\r\n        <header> File Explorer </header> <br />\r\n        <ul>\r\n          <div className=\"file\" onClick = {togglehtml}> <img src = \"https://img.icons8.com/ios/500/html-5--v2.png\" alt=\"\"></img>       index.html </div> <br />\r\n          <div className=\"file\" onClick  = {togglecss}> <img src = \"https://www.pngrepo.com/png/171185/180/css-file.png\" alt=\"\"></img> index.css</div> <br />\r\n          <div className=\"file\" onClick = {togglejs}> <img src = \"https://pic.onlinewebfonts.com/svg/img_475434.png\" alt=\"\"></img>     index.js</div> <br />\r\n        </ul>\r\n      </div>\r\n      <div>\r\n      {file === 1&&htmleditor}\r\n      {file === 2&&csseditor}\r\n      {file === 3&&jseditor}\r\n      </div>\r\n      <div className=\"result\">\r\n        <iframe title=\"result\" srcDoc={\r\n          `<!DOCTYPE html>\r\n          <html lang=\"en\">\r\n          <head>\r\n            <meta charset=\"UTF-8\">\r\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n            <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n            <title>Document</title>\r\n            <style>\r\n              ${css}\r\n            </style>\r\n          </head>\r\n          <body>\r\n            ${html}\r\n    \r\n            <script type=\"text/javascript\">\r\n              ${js}\r\n            </script>\r\n          </body>\r\n          </html>`\r\n        } />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}